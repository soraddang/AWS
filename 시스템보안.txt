1. 프로세스

<<연결관계>>
- 부모프로세스 : 다른 프로세스를 생성하는 프로세스   (PPID)
- 자식프로세스 : 부모 프로세스로부터 만들어지는 프로세스 (PID)

* 고아프로세스
   - 일반적으로 자식프로세스 종료된 후 부모프로세스 종료 
   - 자식프로세스가 종료되기 전에 부모프로세스 종료 
   - systemd로 자식 프로세스를 종료 시켜야 함 
    *  PID  PPID  PPPID

* 좀비프로세스 
   - 정상적으로 프로세스 종료 된 상태 
   - 자원을 반납하지 않은 상태로 남아 있는 프로세스
   - 자원을 점유한 상태에서 동작하지 않은 프로세스 

<<실행상태>>
- Foregroud process
- Backgroud process 

ps : 현재 실행중이 프로세스 목록 출력 명령어 
     -f : 상세하게 확인 
     -e : 시스템 상의 모든 프로세스 출력 명령어 

ps -ef | grep sleep
ps -ef | grep PID

PID 1: systemd
PID 0 : kernel 

kill -9  PID
pkill -9  프로세스명
pkill -9 sleep

---------------
grep 명령어
 - 파일 내용 검색 

grep -i root /etc/passwd
grep -n root /etc/passwd   ==> 줄번호 번호
grep -c root /etc/passwd   ==> 매칭되는 줄 수 표시 
grep -v root /etc/passwd   ==>  해당 패턴을 제외한 모든 내용 출력

------------------
find 명령어 

find / -name passwd   ==> 최상위 디렉터에서부터 검색 
                               ==> passwd라는 글자가 들어있는 모든 것(파일 and 디렉터리)을 검색
find / -name passwd -type f   ==> 파일만 검색 
find / -name passwd -type d   ==> 디렉터리만 검색 

find / -perm 4000  ==> 권한검색(-perm) , 권한이 4000인 파일/디렉터리 검색
find / -perm -4000 ==>  권한이 4XXX인 파일/디렉터리 검색

특수권한 : SetUID(4XXX), SetGID(2XXX), Sticky bit(1XXX) 

touch AAAA
find / -name AAAA -exec rm -rf {} \; 
 ==> 해당 이름을 가진 파일또는 디렉터리를 찾아 삭제

find / -name passwd > TST01
 ==> 해당 이름을 가진 파일또는 디렉터리를 찾아 파일에 저장

touch passwd
find / -name passwd > TST02

diff TST01 TST02  ==> 두 파일의 차이점을 비교 시 

<<무결성 검사 1>>
find / -perm -4000 > TST03
find / -perm -4000 > TST04
diff  TST03  TST04

<<무결성 검사 2>> 
파일의 해시값 생성 
md5dsum TST01
sha1sum TST02


chmod : 권한 변경
chown : 소유자 변경
chgrp : 그룹변경 

계정관리 
 /etc/passwd
 /etc/shadow
 /etc/group

* wheel : 신뢰그룹을 정의
* 그룹관련 명령어 : gpasswd
gpasswd -a hong wheel  ==> 그룹wheel에 사용자 hong추가
gpasswd -d hong wheel  ==> 그룹wheel에 사용자 hong제외

===================================
2. umask 
 - 파일과 디렉터리 생성시 기본 권한 값을 변경하는 명령어  
 - 새로 생성되는 파일이나 디렉터리의 기본 권한 값을 지정 
 - umask의 보수값을 취한 후 파일/디렉터리의 최대권한과 AND 연산으로 기본권한이 결정
 - 파일 최대 권한      ==> 666   /  디렉터리 최대 권한  ==> 777

(예)  umask 0755 인 경우  
       ==> 111 101 101
       ==> 000 010 010

1) umask 보수값 & 파일 최대권한  ==> 파일 기본권한

     000 010 010
 & 110  110 110
--------------------
     000  010 010  ==> --- -w- -w-

2) umask 보수값 & 디렉토리최대권한 ==> 디렉터리 기본권한 
    000 010  010
 & 111 111 111
--------------------
     000 010  010 ==> --- -w- -w-

====================================
3. 특수권한 
 1) SetUID
     - Other 사용자들이 파일을 실행 시 소유자의 실행 권한을 부여받는것 
     - 파일 실행 시 파일 소유자 권한을 할당받음
     - chmod 4XXX       
       rwS rwx rwx    또는  rws rwx rwx      
       rw-                       rwx

    * SetUID에 설정된 것 파일과 디렉터리 모두 검색 
      find / -perm -4000

    * 관리자 권한 탈취하기 위해 ==> SetUID를 이용한 공격

    * 권한 탈취 공격  
      함수 SetUID( )를 실행하는 UID로 모두 변경 
       ==> 만일 루트권한을 가지고 있다면 관련 UID와 GID를 0으로 변경

2) SetGID
     - Other 사용자들이 파일을 실행 시 그룹의 권한을 부여받는것 
     - chmod 2XXX
      find / -perm -2000
      
        rwx rwS rwx    또는  rwx rws rwx     

 3) Sticky bit 
     - 공유디렉터리로 사용 시 설정 
     - 소유자에게만 write 권한이 부여  
     - 그룹에 속한 사용자들이나 other 사용자들은 read 권한만을 부여받음 
     - chmod 1XXX
       find / -perm -1000
       
=====================================
4. Timestamp(타임스탬프) 
 - 파일에 대한 시간 정보 
 1) Access time
 2) Modify time 
 3) Change time 

파일 read ==> Access time 변경
파일 write ==> Modify/Chage time 변경
              ==> 원본파일의 생성시간 확인 ==> change time 

 - 확인 명령어 : stat

* touch 
  - 빈 파일 생성
  - 파일의 시간 변경 시 (생성 시간을 조작)

 A) touch FFF  ==>빈 파일 생성
 B) touch FFF   ==> 생성된 파일의 시간을 변경
     touch -t 202203040000  FFF
     touch  FFF
     stat FFF

     Access time : 내용을 읽을 때의 시간 변경 
     Modify time : touch명령어를 사용해서 시간 변경 가능
     Change time : touch명령어를 사용해 시간 변경 불가능
     
===========================================
5. 계정관리 & 패스워트 관리 정책  ==> PAM 

 - root 계정
 - 시스템 계정
 - 일반계정



account   required ==>time (3:00접근 deny)
password sufficient ==> 3번 실패하면 deny


telnet 192.168.10.30
login : root
password : 1234






















































   


   















 














  
















  





























  




























































































